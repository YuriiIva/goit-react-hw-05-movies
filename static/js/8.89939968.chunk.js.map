{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Pages/MovieDetailsPage/Cast/Cast.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Cast","useState","casts","setCasts","movieId","useParams","useEffect","getMovieCast","a","fetchFilmsInf","castSearch","cast","ErrorMsg","message","map","src","profile_path","alt","width","name","character"],"mappings":"mMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,yHIqC/EC,UAnCF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACQC,EAAYC,cAAZD,QAeR,OAbAE,qBAAU,WACR,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,+EAEQC,YAAcL,GAFtB,OAEXM,EAFW,OAIjBP,EAAS,YAAIO,EAAWC,OAJP,gDAMjBC,YAAS,KAAMC,SANE,yDAAH,qDASlBN,MACC,CAACH,IAGF,8BACGF,EAAMY,KAAI,SAACH,GAAD,OACT,gCACE,qBACEI,IAAG,yCAAoCJ,EAAKK,aAAzC,KACHC,IAAI,GACJC,MAAM,SAER,4BAAIP,EAAKQ,OACT,4BAAIR,EAAKS","file":"static/js/8.89939968.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchFilmsInf } from \"../../../../services/Api\";\n\nimport ErrorMsg from \"../../../common/ErrorMsg/ErrorMsg\";\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const castSearch = await fetchFilmsInf(movieId);\n\n        setCasts([...castSearch.cast]);\n      } catch (error) {\n        ErrorMsg(error.message);\n      }\n    };\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {casts.map((cast) => (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${cast.profile_path} `}\n            alt=\"\"\n            width=\"70px\"\n          />\n          <p>{cast.name}</p>\n          <p>{cast.character}</p>\n        </div>\n      ))}\n      {/* <Link to={`/movies/${movieId}/cast`}>Cast</Link> */}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"sourceRoot":""}