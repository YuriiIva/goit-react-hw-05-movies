{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/RenderList/RenderList.jsx","components/Pages/MoviesPage/MoviesPage.module.css","components/Pages/MoviesPage/MoviesPage.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","RenderList","films","map","title","id","name","original_name","to","module","exports","LOCAL_KEY","MoviesPage","useState","setFilms","serchMovie","setSerchMovie","imputMovie","setImputMovie","setIsLoading","filmSave","setFilmSave","history","useHistory","useEffect","getMovie","a","fetchSearchFilms","movies","results","length","toast","error","localStorage","setItem","ErrorMsg","message","replace","abs","getItem","reset","action","className","s","form","onSubmit","e","preventDefault","trim","alert","type","value","onChange","target","autoFocus","placeholder","btn_search"],"mappings":"mMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,gCIL9F,uBAkBeC,IAfI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,8BACE,6BACGA,GACCA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,cAApB,OACR,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaH,GAArB,SAA4BE,GAAiBH,GAASE,KAD/CD,Y,mBCRrBI,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,0JCSzDC,EAAY,cAkFHC,UAhFI,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,mBAAS,IAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEA,EAAkCL,oBAAS,GAA3C,mBAAkBM,GAAlB,WACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cAEhBC,qBAAU,WACR,IAAKT,EAAY,OAAO,EACpBK,IACFJ,EAAcI,GACdF,EAAcE,IAEhB,IAAMK,EAAQ,uCAAG,4BAAAC,EAAA,+EAEQC,YAAiBZ,GAFzB,UAGiB,KADxBa,EAFO,QAGFC,QAAQC,OAHN,uBAIXC,IAAMC,MAAM,iBAJD,0BAObX,EAAYY,aAAaC,QAAQvB,EAAWI,IAC5CD,EAAS,YAAIc,EAAOC,UARP,kDAUbM,YAAS,KAAMC,SACfd,EAAQe,QAAQ,WAXH,yBAablB,GAAa,GAbA,6EAAH,qDAgBdM,MACC,CAACL,EAAUE,EAASP,IAEvBS,qBAAU,WACR,IAAMc,EAAML,aAAaM,QAAQ5B,GACjCU,EAAYiB,GACZtB,EAAcsB,KACb,IAEH,IAWME,EAAQ,WACZtB,EAAc,KAOhB,OACE,gCACE,uBAAMuB,OAAO,GAAGC,UAAWC,IAAEC,KAAMC,SArBpB,SAACC,GAClBA,EAAEC,iBACwB,KAAtB9B,EAAW+B,QAIfhC,EAAcC,GAEduB,KALES,MAAM,6BAkBN,UACE,uBACEC,KAAK,OACL5C,KAAK,GACLD,GAAG,GACH8C,MAAOlC,EACPmC,SAZY,SAACN,GACnB5B,EAAc4B,EAAEO,OAAOF,QAYjBG,WAAS,EACTC,YAAY,iBAEd,wBAAQL,KAAK,SAASR,UAAWC,IAAEa,WAAnC,uBAIF,cAAC,IAAD,CAAYtD,MAAOA","file":"static/js/4.21e58125.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RenderList = ({ films }) => {\n  return (\n    <div>\n      <ul>\n        {films &&\n          films.map(({ title, id, name, original_name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`}>{original_name || title || name}</Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RenderList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MoviesPage_form__1OjEp\",\"btn_search\":\"MoviesPage_btn_search__2qRNB\"};","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\n\nimport { fetchSearchFilms } from \"../../../services/Api\";\n\nimport s from \"./MoviesPage.module.css\";\nimport RenderList from \"../../RenderList/RenderList\";\nimport ErrorMsg from \"../../common/ErrorMsg/ErrorMsg\";\nimport { toast } from \"react-toastify\";\nconst LOCAL_KEY = \"searchMovie\";\n\nconst MoviesPage = () => {\n  const [films, setFilms] = useState([]);\n  const [serchMovie, setSerchMovie] = useState(\"\");\n  const [imputMovie, setImputMovie] = useState(\"\");\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [filmSave, setFilmSave] = useState(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!serchMovie) return false;\n    if (filmSave) {\n      setSerchMovie(filmSave);\n      setImputMovie(filmSave);\n    }\n    const getMovie = async () => {\n      try {\n        const movies = await fetchSearchFilms(serchMovie);\n        if (movies.results.length === 0) {\n          toast.error(\"Nothing found\");\n          return;\n        }\n        setFilmSave(localStorage.setItem(LOCAL_KEY, serchMovie));\n        setFilms([...movies.results]);\n      } catch (error) {\n        ErrorMsg(error.message);\n        history.replace(\"/movies\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [filmSave, history, serchMovie]);\n\n  useEffect(() => {\n    const abs = localStorage.getItem(LOCAL_KEY);\n    setFilmSave(abs);\n    setSerchMovie(abs);\n  }, []);\n\n  const onInpuFilm = (e) => {\n    e.preventDefault();\n    if (imputMovie.trim() === \"\") {\n      alert(\"Please, input your words\");\n      return;\n    }\n    setSerchMovie(imputMovie);\n\n    reset();\n  };\n\n  const reset = () => {\n    setImputMovie(\"\");\n  };\n\n  const handleInput = (e) => {\n    setImputMovie(e.target.value);\n  };\n\n  return (\n    <div>\n      <form action=\"\" className={s.form} onSubmit={onInpuFilm}>\n        <input\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          value={imputMovie}\n          onChange={handleInput}\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\" className={s.btn_search}>\n          Search\n        </button>\n      </form>\n      <RenderList films={films} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"sourceRoot":""}