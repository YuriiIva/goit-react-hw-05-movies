{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/RenderList/RenderList.jsx","components/Pages/HomePage/HomePage.jsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","RenderList","films","map","title","id","name","original_name","to","HomePage","useState","setFilms","setIsLoading","useEffect","getFilms","a","fetchFilms","results","ErrorMsg","message"],"mappings":"mMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,gCIL9F,uBAkBeC,IAfI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpB,OACE,8BACE,6BACGA,GACCA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,cAApB,OACR,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaH,GAArB,SAA4BE,GAAiBH,GAASE,KAD/CD,Y,0HC2BNI,UA9BE,WACf,MAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KAEA,EAA0BD,mBAAS,IAAnC,mBACA,GADA,UACkCA,oBAAS,IAA3C,mBAAkBE,GAAlB,WACA,EAAsCF,oBAAS,GAA/C,6BAiBA,OAfAG,qBAAU,WACR,IAAMC,EAAQ,uCAAG,8BAAAC,EAAA,6DACfH,GAAa,GADE,kBAGaI,cAHb,gBAGLC,EAHK,EAGLA,QACRN,EAAS,YAAIM,IAJA,gDAMbC,YAAS,KAAMC,SANF,yBAQbP,GAAa,GARA,4EAAH,qDAWdE,MACC,IAGD,gCACE,gDACA,cAAC,IAAD,CAAYZ,MAAOA","file":"static/js/5.ddd80436.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst RenderList = ({ films }) => {\n  return (\n    <div>\n      <ul>\n        {films &&\n          films.map(({ title, id, name, original_name }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`}>{original_name || title || name}</Link>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RenderList;\n","import { fetchFilms } from \"../../../services/Api\";\nimport { useEffect, useState } from \"react\";\nimport RenderList from \"../../RenderList/RenderList\";\n\nimport ErrorMsg from \"../../common/ErrorMsg/ErrorMsg\";\n\nconst HomePage = () => {\n  const [films, setFilms] = useState([]);\n\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isMovieOpen, setIsMovieOpen] = useState(false);\n\n  useEffect(() => {\n    const getFilms = async () => {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchFilms();\n        setFilms([...results]);\n      } catch (error) {\n        ErrorMsg(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFilms();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <RenderList films={films} />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}