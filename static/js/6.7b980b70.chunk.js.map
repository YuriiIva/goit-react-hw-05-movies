{"version":3,"sources":["components/Pages/MovieDetailsPage/MovieDetailsPage.module.css","components/Pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["module","exports","Cast","lazy","Reviews","MovieDetailsPage","onCloseMovie","useState","films","setFilms","movieId","useParams","match","useRouteMatch","history","useHistory","useEffect","getMoviesById","a","fetchFilmsId","movies","ErrorMsg","message","className","s","modal","type","onClick","goBack","detailes_page","src","poster_path","alt","width","img","page_overview","original_title","name","vote_average","overview","genres","map","genre","join","to","url","activeClassName","fallback","exact","path"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,QAAU,kCAAkC,MAAQ,gCAAgC,cAAgB,wCAAwC,IAAM,8BAA8B,cAAgB,wCAAwC,WAAa,uC,iJCiBjQC,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAmFZE,UAjFU,SAAC,GAAqB,EAAnBC,aAAoB,IAC9C,EAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEQC,EAAYC,cAAZD,QACFE,EAAQC,cACRC,EAAUC,cAEhBC,qBAAU,WACR,IAAMC,EAAa,uCAAG,4BAAAC,EAAA,+EAEGC,YAAaT,GAFhB,OAEZU,EAFY,OAIlBX,EAASW,GAJS,gDAMlBC,YAAS,KAAMC,SANG,yDAAH,qDASnBL,MACC,CAACP,IAMJ,OACEF,GACE,sBAAKe,UAAWC,IAAEC,MAAlB,UACE,8BACE,wBAAQC,KAAK,SAASC,QART,WACnBb,EAAQc,UAOF,uBAKF,sBAAKL,UAAWC,IAAEK,cAAlB,UACE,qBACEC,IAAG,yCAAoCtB,EAAMuB,aAC7CC,IAAI,GACJC,MAAM,QACNV,UAAWC,IAAEU,MAGf,sBAAKX,UAAWC,IAAEW,cAAlB,UACE,6BAAK3B,EAAM4B,gBAAkB5B,EAAM6B,OACnC,6CAAqC,GAArB7B,EAAM8B,aAAtB,QACA,0CACA,4BAAI9B,EAAM+B,WACV,0CACA,4BAAI/B,EAAMgC,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAML,QAAMM,KAAK,cAGrD,uBACA,uDACA,sBAAKpB,UAAU,aAAf,UACE,+BACE,6BACE,cAAC,IAAD,CAASqB,GAAE,UAAKhC,EAAMiC,IAAX,SAAuBC,gBAAgB,SAAlD,oBAIF,6BACE,cAAC,IAAD,CAASF,GAAE,UAAKhC,EAAMiC,IAAX,YAA0BC,gBAAgB,SAArD,0BAKJ,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAI,UAAKrC,EAAMqC,KAAX,SAAjB,SACE,cAAC/C,EAAD,MAEF,cAAC,IAAD,CAAO+C,KAAI,UAAKrC,EAAMqC,KAAX,YAAX,SACE,cAAC7C,EAAD","file":"static/js/6.7b980b70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"MovieDetailsPage_overlay__3Wm4N\",\"modal\":\"MovieDetailsPage_modal__zdks1\",\"detailes_page\":\"MovieDetailsPage_detailes_page__3FX3K\",\"img\":\"MovieDetailsPage_img__KYg4j\",\"page_overview\":\"MovieDetailsPage_page_overview__LCJFm\",\"infomation\":\"MovieDetailsPage_infomation__2KEJJ\"};","import { useEffect, useState, lazy, Suspense } from \"react\";\nimport {\n  Route,\n  useParams,\n  Switch,\n  NavLink,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\n\n// import Cast from \"./Cast/Cast\";\n// import Reviews from \"./Reviews/Reviews\";\nimport { fetchFilmsId } from \"../../../services/Api\";\nimport ErrorMsg from \"../../common/ErrorMsg/ErrorMsg\";\nimport Loader from \"../../common/Loader/Loader\";\n\nimport s from \"./MovieDetailsPage.module.css\";\n\nconst Cast = lazy(() => import(\"./Cast/Cast\"));\nconst Reviews = lazy(() => import(\"./Reviews/Reviews\"));\n\nconst MovieDetailsPage = ({ onCloseMovie }) => {\n  const [films, setFilms] = useState(null);\n\n  const { movieId } = useParams();\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    const getMoviesById = async () => {\n      try {\n        const movies = await fetchFilmsId(movieId);\n\n        setFilms(movies);\n      } catch (error) {\n        ErrorMsg(error.message);\n      }\n    };\n    getMoviesById();\n  }, [movieId]);\n\n  const handelGoBack = () => {\n    history.goBack();\n  };\n\n  return (\n    films && (\n      <div className={s.modal}>\n        <div>\n          <button type=\"button\" onClick={handelGoBack}>\n            Go back\n          </button>\n        </div>\n\n        <div className={s.detailes_page}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${films.poster_path}`}\n            alt=\"\"\n            width=\"350px\"\n            className={s.img}\n          />\n\n          <div className={s.page_overview}>\n            <h2>{films.original_title || films.name}</h2>\n            <p>User Score: {films.vote_average * 10} %</p>\n            <h3>Overview</h3>\n            <p>{films.overview}</p>\n            <h3>Genres: </h3>\n            <p>{films.genres.map((genre) => genre.name).join(\", \")}</p>\n          </div>\n        </div>\n        <hr />\n        <p>Additional information</p>\n        <div className=\"infomation\">\n          <ul>\n            <li>\n              <NavLink to={`${match.url}/cast`} activeClassName=\"active\">\n                Cast\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to={`${match.url}/reviews`} activeClassName=\"active\">\n                Reviews\n              </NavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Switch>\n              <Route exact path={`${match.path}/cast`}>\n                <Cast />\n              </Route>\n              <Route path={`${match.path}/reviews`}>\n                <Reviews />\n              </Route>\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}